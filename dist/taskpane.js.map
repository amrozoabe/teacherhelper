{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/make namespace object","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","declare const Office: any;\r\ndeclare const Excel: any;\r\ndeclare const document: any;\r\n\r\ninterface Filter {\r\n  column: string;\r\n  values: string;\r\n}\r\n\r\nexport class Logging {\r\n  static log(...args: any[]) {\r\n    // eslint-disable-next-line\r\n    console.log(args);\r\n  }\r\n\r\n  static error(...args: any[]) {\r\n    // eslint-disable-next-line\r\n    console.error(...rgs);\r\n  }\r\n}\r\n\r\nlet filters: Filter[] = [];\r\nlet columnTitles: string[] = [];\r\n\r\nOffice.onReady((info) => {\r\n    console.log(\"Office.onReady called\");\r\n    document.getElementById(\"loading\")!.style.display = \"none\";\r\n  \r\n    if (info.host === Office.HostType.Excel) {\r\n      console.log(\"Excel host detected\");\r\n      document.getElementById(\"app-body\")!.style.display = \"flex\";\r\n  \r\n      Excel.run(async (context) => {\r\n        const sheet = context.workbook.worksheets.getActiveWorksheet();\r\n        \r\n        // Add event handler for worksheet change\r\n        sheet.onChanged.add(handleWorksheetChange);\r\n        \r\n        // Add event handler for worksheet addition or deletion\r\n        context.workbook.worksheets.onActivated.add(handleWorksheetChange);\r\n  \r\n        await context.sync();\r\n        console.log(\"Event handlers added for worksheet changes\");\r\n  \r\n        // Initial population of column titles and menus\r\n        await getColumnTitles();\r\n        populateColumnTitlesMenu();\r\n      }).catch((error) => {\r\n        console.error(\"Error setting up event handlers:\", error);\r\n        showNotification(\"Failed to set up automatic updates. Please refresh manually if needed.\", true);\r\n      });\r\n  \r\n      // Remove the event listener for the refresh button as it's no longer needed\r\n      // document.getElementById(\"refresh-columns\")!.addEventListener(\"click\", ...)\r\n  \r\n      // Keep other event listeners\r\n      document.getElementById(\"generate-draft\")!.addEventListener(\"click\", generateEmailDraft);\r\n      document.getElementById(\"send-emails\")!.addEventListener(\"click\", sendEmails);\r\n      document.getElementById(\"options\")!.addEventListener(\"change\", handleOptionsChange);\r\n      document.getElementById(\"add-filter\")!.addEventListener(\"click\", addFilter);\r\n      document.getElementById(\"myTextarea\")!.addEventListener(\"input\", handlePromptInput);\r\n  \r\n    } else if (info.host === Office.HostType.Outlook) {\r\n      console.log(\"Outlook host detected\");\r\n      document.getElementById(\"app-body\")!.style.display = \"flex\";\r\n      // Add any Outlook-specific initialization here\r\n    } else {\r\n      console.log(\"Unsupported host detected:\", info.host);\r\n    }\r\n});\r\n\r\nasync function getColumnTitles(): Promise<void> {\r\n    try {\r\n      await Excel.run(async (context: any) => {\r\n        console.log(\"Fetching column titles...\");\r\n  \r\n        const sheet = context.workbook.worksheets.getActiveWorksheet();\r\n        const range = sheet.getUsedRange();\r\n        const headerRow = range.getRow(0);\r\n        headerRow.load(\"values\");\r\n  \r\n        await context.sync();\r\n  \r\n        if (!headerRow.values || headerRow.values.length === 0 || headerRow.values[0].length === 0) {\r\n          throw new Error(\"No data found in the first row of the sheet\");\r\n        }\r\n  \r\n        columnTitles = headerRow.values[0] as string[];\r\n        console.log(\"Column titles updated:\", columnTitles);\r\n        \r\n        // Update the email column menu\r\n        populateEmailColumnMenu();\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching column titles:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\nfunction populateColumnTitlesMenu() {\r\n  const menus = document.getElementsByClassName(\"columnTitlesMenu\");\r\n  Array.from(menus).forEach((menu: HTMLSelectElement) => {\r\n    menu.innerHTML = \"\"; // Clear existing options\r\n\r\n    // Add a default option\r\n    const defaultOption = document.createElement(\"option\");\r\n    defaultOption.text = \"Select a column\";\r\n    defaultOption.value = \"\";\r\n    menu.appendChild(defaultOption);\r\n\r\n    // Add options for each column title\r\n    columnTitles.forEach((title, index) => {\r\n      const option = document.createElement(\"option\");\r\n      option.value = index.toString();\r\n      option.text = title;\r\n      menu.appendChild(option);\r\n    });\r\n  });\r\n}\r\n\r\nfunction populateEmailColumnMenu() {\r\n    const emailColumnMenu = document.getElementById(\"email-column\") as HTMLSelectElement;\r\n    if (!emailColumnMenu) {\r\n      console.error(\"Email column menu not found\");\r\n      return;\r\n    }\r\n    emailColumnMenu.innerHTML = \"\"; // Clear existing options\r\n  \r\n    // Add a default option\r\n    const defaultOption = document.createElement(\"option\");\r\n    defaultOption.text = \"Select a column\";\r\n    defaultOption.value = \"\";\r\n    emailColumnMenu.appendChild(defaultOption);\r\n  \r\n    // Add options for each column title\r\n    columnTitles.forEach((title, index) => {\r\n      const option = document.createElement(\"option\");\r\n      option.value = index.toString();\r\n      option.text = title;\r\n      emailColumnMenu.appendChild(option);\r\n    });\r\n  \r\n    // Detect and select email column\r\n    const emailColumnIndex = detectEmailColumn(columnTitles);\r\n    if (emailColumnIndex !== -1) {\r\n      emailColumnMenu.value = emailColumnIndex.toString();\r\n    }\r\n  \r\n    console.log(\"Email column menu populated with\", columnTitles.length, \"options\");\r\n    console.log(\"Automatically selected email column:\", emailColumnIndex);\r\n}\r\n\r\n\r\nfunction handlePromptInput(event: Event) {\r\n  const textarea = event.target as HTMLTextAreaElement;\r\n  const cursorPosition = textarea.selectionStart;\r\n  const textBeforeCursor = textarea.value.substring(0, cursorPosition);\r\n\r\n  if (textBeforeCursor.endsWith(\"@\")) {\r\n    showColumnTitlesMenu(textarea, cursorPosition);\r\n  }\r\n}\r\n\r\nfunction showColumnTitlesMenu(textarea: HTMLTextAreaElement, position: number) {\r\n  // Remove any existing dropdown\r\n  const existingDropdown = document.querySelector(\".column-titles-dropdown\");\r\n  if (existingDropdown) {\r\n    existingDropdown.remove();\r\n  }\r\n\r\n  // Create a dropdown element\r\n  const dropdown = document.createElement(\"div\");\r\n  dropdown.className = \"column-titles-dropdown\";\r\n  dropdown.style.position = \"fixed\"; // Change to fixed positioning\r\n  dropdown.style.zIndex = \"1000\";\r\n  dropdown.style.backgroundColor = \"white\";\r\n  dropdown.style.border = \"1px solid #ccc\";\r\n  dropdown.style.maxHeight = \"200px\";\r\n  dropdown.style.overflowY = \"auto\";\r\n  dropdown.style.boxShadow = \"0 2px 5px rgba(0,0,0,0.2)\";\r\n\r\n  // Position the dropdown near the cursor\r\n  const rect = textarea.getBoundingClientRect();\r\n  const { top, left } = getCaretCoordinates(textarea, position);\r\n\r\n  const dropdownTop = rect.top + top - dropdown.offsetHeight;\r\n  const dropdownLeft = rect.left + left;\r\n\r\n  dropdown.style.left = `${dropdownLeft}px`;\r\n  dropdown.style.top = `${dropdownTop}px`;\r\n\r\n  // Populate the dropdown with column titles\r\n  columnTitles.forEach((title, index) => {\r\n    const item = document.createElement(\"div\");\r\n    item.textContent = title;\r\n    item.className = \"column-title-item\";\r\n    item.style.padding = \"5px\";\r\n    item.style.cursor = \"pointer\";\r\n    item.onmouseover = () => {\r\n      item.style.backgroundColor = \"#f0f0f0\";\r\n    };\r\n    item.onmouseout = () => {\r\n      item.style.backgroundColor = \"white\";\r\n    };\r\n    item.onclick = () => {\r\n      insertColumnTitle(textarea, title, position);\r\n      dropdown.remove();\r\n    };\r\n    dropdown.appendChild(item);\r\n  });\r\n\r\n  // Add the dropdown to the body\r\n  document.body.appendChild(dropdown);\r\n\r\n  // Adjust the position after adding to the DOM\r\n  const dropdownRect = dropdown.getBoundingClientRect();\r\n  if (dropdownRect.top < 0) {\r\n    dropdown.style.top = `${rect.top + top + 20}px`; // Position below if not enough space above\r\n  }\r\n\r\n  // Close the dropdown when clicking outside\r\n  document.addEventListener(\"click\", function closeDropdown(e: MouseEvent) {\r\n    if (!dropdown.contains(e.target as Node) && e.target !== textarea) {\r\n      dropdown.remove();\r\n      document.removeEventListener(\"click\", closeDropdown);\r\n    }\r\n  });\r\n}\r\n\r\nfunction getCaretCoordinates(element: HTMLTextAreaElement, position: number) {\r\n  const div = document.createElement(\"div\");\r\n  const styles = getComputedStyle(element);\r\n  const properties = [\r\n    \"fontFamily\",\r\n    \"fontSize\",\r\n    \"fontWeight\",\r\n    \"fontStyle\",\r\n    \"letterSpacing\",\r\n    \"textTransform\",\r\n    \"wordSpacing\",\r\n    \"textIndent\",\r\n    \"whiteSpace\",\r\n    \"lineHeight\",\r\n    \"padding\",\r\n    \"border\",\r\n    \"boxSizing\",\r\n  ];\r\n\r\n  properties.forEach((prop) => {\r\n    div.style[prop] = styles[prop];\r\n  });\r\n\r\n  div.textContent = element.value.substring(0, position);\r\n  div.style.position = \"absolute\";\r\n  div.style.visibility = \"hidden\";\r\n  div.style.whiteSpace = \"pre-wrap\";\r\n\r\n  document.body.appendChild(div);\r\n  const coordinates = {\r\n    top: div.offsetHeight - element.scrollTop,\r\n    left: div.offsetWidth - element.scrollLeft,\r\n  };\r\n  document.body.removeChild(div);\r\n\r\n  return coordinates;\r\n}\r\n\r\nconst properties = [\r\n  \"direction\",\r\n  \"boxSizing\",\r\n  \"width\",\r\n  \"height\",\r\n  \"overflowX\",\r\n  \"overflowY\",\r\n  \"borderTopWidth\",\r\n  \"borderRightWidth\",\r\n  \"borderBottomWidth\",\r\n  \"borderLeftWidth\",\r\n  \"paddingTop\",\r\n  \"paddingRight\",\r\n  \"paddingBottom\",\r\n  \"paddingLeft\",\r\n  \"fontStyle\",\r\n  \"fontVariant\",\r\n  \"fontWeight\",\r\n  \"fontStretch\",\r\n  \"fontSize\",\r\n  \"fontSizeAdjust\",\r\n  \"lineHeight\",\r\n  \"fontFamily\",\r\n  \"textAlign\",\r\n  \"textTransform\",\r\n  \"textIndent\",\r\n  \"textDecoration\",\r\n  \"letterSpacing\",\r\n  \"wordSpacing\",\r\n];\r\n\r\nfunction insertColumnTitle(textarea: HTMLTextAreaElement, title: string, position: number) {\r\n  const before = textarea.value.substring(0, position);\r\n  const after = textarea.value.substring(position);\r\n  textarea.value = before + title + after;\r\n  textarea.selectionStart = textarea.selectionEnd = position + title.length;\r\n  textarea.focus();\r\n}\r\n\r\nfunction handleOptionsChange(event: Event) {\r\n    const select = event.target as HTMLSelectElement;\r\n    const addFilterButton = document.getElementById(\"add-filter\") as HTMLButtonElement;\r\n    addFilterButton.style.display = select.value === \"specific\" ? \"inline-block\" : \"none\";\r\n    if (select.value !== \"specific\") {\r\n      filters = [];\r\n      updateFilterDisplay();\r\n      console.log(\"Filters cleared:\", JSON.stringify(filters));\r\n    }\r\n  }\r\n\r\nfunction addFilter() {\r\n  const filter: Filter = {\r\n    column: \"\",\r\n    values: \"\",\r\n  };\r\n  const filterContainer = document.createElement(\"div\");\r\n  filterContainer.className = \"filter-container\";\r\n  const columnSelect = createColumnSelect(filter);\r\n  const valuesInput = createValuesInput(filter);\r\n  const deleteButton = createDeleteButton(filter, filterContainer);\r\n  filterContainer.appendChild(columnSelect);\r\n  filterContainer.appendChild(valuesInput);\r\n  filterContainer.appendChild(deleteButton);\r\n  document.getElementById(\"filter-containers\")!.appendChild(filterContainer);\r\n  filters.push(filter);\r\n    console.log(\"Current filters:\", JSON.stringify(filters));\r\n\r\n  // Populate the newly created column select\r\n  populateColumnSelect(columnSelect);\r\n}\r\n\r\nfunction createColumnSelect(filter: Filter): HTMLSelectElement {\r\n    const columnSelect = document.createElement(\"select\");\r\n    columnSelect.className = \"columnTitlesMenu\";\r\n    columnSelect.addEventListener(\"change\", function (this: HTMLSelectElement) {\r\n      filter.column = columnTitles[parseInt(this.value)];\r\n    });\r\n    return columnSelect;\r\n  }\r\n\r\nfunction populateColumnSelect(columnSelect: HTMLSelectElement) {\r\n  columnSelect.innerHTML = \"\"; // Clear existing options\r\n\r\n  // Add a default option\r\n  const defaultOption = document.createElement(\"option\");\r\n  defaultOption.text = \"Select a column\";\r\n  defaultOption.value = \"\";\r\n  columnSelect.appendChild(defaultOption);\r\n\r\n  // Add options for each column title\r\n  columnTitles.forEach((title, index) => {\r\n    const option = document.createElement(\"option\");\r\n    option.value = index.toString();\r\n    option.text = title;\r\n    columnSelect.appendChild(option);\r\n  });\r\n}\r\n\r\nfunction createValuesInput(filter: Filter): HTMLInputElement {\r\n  const valuesInput = document.createElement(\"input\");\r\n  valuesInput.type = \"text\";\r\n  valuesInput.placeholder = \"Enter values (comma-separated)\";\r\n  valuesInput.addEventListener(\"input\", function (this: HTMLInputElement) {\r\n    filter.values = this.value;\r\n  });\r\n  return valuesInput;\r\n}\r\n\r\nfunction createDeleteButton(filter: Filter, filterContainer: HTMLDivElement): HTMLButtonElement {\r\n  const deleteButton = document.createElement(\"button\");\r\n  deleteButton.textContent = \"Delete\";\r\n  deleteButton.addEventListener(\"click\", function () {\r\n    filterContainer.remove();\r\n    const index = filters.findIndex((f) => f === filter);\r\n    if (index !== -1) {\r\n      filters.splice(index, 1);\r\n    }\r\n  });\r\n  return deleteButton;\r\n}\r\n\r\nfunction updateFilterDisplay() {\r\n  const filterContainers = document.getElementById(\"filter-containers\")!;\r\n  filterContainers.innerHTML = \"\";\r\n}\r\n\r\nasync function generateEmailDraft() {\r\n    const promptElement = document.getElementById(\"myTextarea\") as HTMLTextAreaElement;\r\n    const subjectElement = document.getElementById(\"email-subject\") as HTMLTextAreaElement;\r\n    const bodyElement = document.getElementById(\"email-body\") as HTMLTextAreaElement;\r\n    const prompt = promptElement.value;\r\n  \r\n    if (!prompt) {\r\n      showNotification(\"Please enter a prompt before generating an email draft.\", true);\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      console.log(\"Generating email draft...\");\r\n      showNotification(\"Generating email draft...\");\r\n      const generatedText = await callClaudeAPI(prompt, columnTitles);\r\n      const { subject, body } = parseGeneratedEmail(generatedText);\r\n      subjectElement.value = subject;\r\n      bodyElement.value = body;\r\n      showNotification(\"Email draft generated successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error in generateEmailDraft:\", error);\r\n      subjectElement.value = \"Error generating subject\";\r\n      bodyElement.value = \"An error occurred. Please try again. Error details: \" + error.message;\r\n      showNotification(\"Failed to generate email draft. Please try again.\", true);\r\n    }\r\n  }\r\n  \r\n  function parseGeneratedEmail(text: string): { subject: string; body: string } {\r\n    const parts = text.split('\\n\\n');\r\n    return {\r\n      subject: parts[0].replace('Subject: ', '').trim(),\r\n      body: parts.slice(1).join('\\n\\n').trim()\r\n    };\r\n}\r\n\r\nasync function callClaudeAPI(prompt: string, columnTitles: string[]): Promise<string> {\r\n  const apiUrl = \"http://localhost:3001/api/generate\";\r\n\r\n  try {\r\n    console.log(\"Calling Claude API...\");\r\n    console.log(\"Prompt:\", prompt);\r\n    console.log(\"Column titles:\", columnTitles);\r\n    const response = await fetch(apiUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        prompt: `Human: You are an AI assistant helping a university teacher write an email to students. The teacher will provide instructions, and you should write a professional email based on those instructions. Generate both a subject line and an email body. Use {{column_title}} as placeholders for personalized information. Available column titles are: ${columnTitles.join(\", \")}. only stick to the available column titles in the provided menu. Only provide the email draft ready to be sent instead of writing something along the lines of \"Here is an email...\" at the begining. Provide the email draft in the following format:\r\n\r\n                Subject: [Generated Subject]\r\n\r\n                [Generated Email Body]\r\n\r\n                Here are the teacher's instructions: \"${prompt}\"\r\n\r\n                Assistant:`,\r\n        max_tokens_to_sample: 300,\r\n        temperature: 0.7,\r\n      }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    console.log(\"API response:\", JSON.stringify(data, null, 2));\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}, message: ${JSON.stringify(data, null, 2)}`);\r\n    }\r\n\r\n    if (!data.completion) {\r\n      throw new Error(\"No completion in API response: \" + JSON.stringify(data, null, 2));\r\n    }\r\n\r\n    return data.completion;\r\n  } catch (error) {\r\n    console.error(\"Error calling Claude API:\", error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function sendEmails() {\r\n    console.log(\"Sending emails...\");\r\n\r\n    try {\r\n        await Excel.run(async (context) => {\r\n            const sheet = context.workbook.worksheets.getActiveWorksheet();\r\n            const emailColumnSelect = document.getElementById(\"email-column\") as HTMLSelectElement;\r\n            const emailColumnIndex = parseInt(emailColumnSelect.value);\r\n\r\n            console.log(`Selected email column index: ${emailColumnIndex}`);\r\n\r\n            if (isNaN(emailColumnIndex)) {\r\n                throw new Error(\"Please select an email column\");\r\n            }\r\n\r\n            const usedRange = sheet.getUsedRange();\r\n            usedRange.load(\"values\");\r\n            await context.sync();\r\n\r\n            const headerRow = usedRange.values[0] as string[];\r\n            console.log(`Header row: ${JSON.stringify(headerRow)}`);\r\n\r\n            const subjectElement = document.getElementById(\"email-subject\") as HTMLTextAreaElement;\r\n            const bodyElement = document.getElementById(\"email-body\") as HTMLTextAreaElement;\r\n\r\n            if (!subjectElement || !bodyElement) {\r\n                throw new Error(\"Email subject or body element not found\");\r\n            }\r\n\r\n            const emailSubjectTemplate = subjectElement.value;\r\n            const emailBodyTemplate = bodyElement.value;\r\n\r\n            console.log(`Email subject template: ${emailSubjectTemplate}`);\r\n            console.log(`Email body template: ${emailBodyTemplate}`);\r\n\r\n            if (!emailSubjectTemplate || !emailBodyTemplate) {\r\n                throw new Error(\"Email subject or body template is empty\");\r\n            }\r\n\r\n            const emails = [];\r\n\r\n            let skippedRows = 0;\r\n            let totalRows = usedRange.values.length - 1; // Subtract 1 for header row\r\n            let filteredOutRows = 0;\r\n\r\n            console.log(`Processing ${totalRows} rows...`);\r\n\r\n            const optionsSelect = document.getElementById(\"options\") as HTMLSelectElement;\r\n            const useFilters = optionsSelect.value === \"specific\";\r\n            console.log(`Using filters: ${useFilters}`);\r\n            console.log(`Current filters: ${JSON.stringify(filters)}`);\r\n\r\n            for (let i = 1; i < usedRange.values.length; i++) {\r\n                const row = usedRange.values[i];\r\n                console.log(`Processing row ${i}: ${JSON.stringify(row)}`);\r\n\r\n                const emailAddress = row[emailColumnIndex];\r\n                console.log(`Email address found: ${emailAddress}`);\r\n\r\n                if (!emailAddress || !isValidEmail(emailAddress)) {\r\n                    console.log(`Skipping row ${i}: Invalid email address`);\r\n                    skippedRows++;\r\n                    continue;\r\n                }\r\n\r\n                if (useFilters) {\r\n                    const passesFilter = applyFilters(row, headerRow);\r\n                    console.log(`Row ${i} passes filter: ${passesFilter}`);\r\n                    if (!passesFilter) {\r\n                        filteredOutRows++;\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                let personalizedSubject = emailSubjectTemplate;\r\n                let personalizedBody = emailBodyTemplate;\r\n\r\n                for (let j = 0; j < row.length; j++) {\r\n                    const columnName = headerRow[j];\r\n                    const cellValue = row[j];\r\n                    const placeholder = `{{${columnName}}}`;\r\n                    personalizedSubject = personalizedSubject.replace(new RegExp(placeholder, 'g'), cellValue);\r\n                    personalizedBody = personalizedBody.replace(new RegExp(placeholder, 'g'), cellValue);\r\n                }\r\n\r\n                personalizedBody = formatEmailContent(personalizedBody);\r\n\r\n                emails.push({\r\n                    to: emailAddress,\r\n                    subject: personalizedSubject,\r\n                    html: personalizedBody,\r\n                });\r\n                console.log(`Added email for ${emailAddress} with subject: ${personalizedSubject}`);\r\n            }\r\n\r\n            console.log(`Total rows processed: ${totalRows}`);\r\n            console.log(`Skipped rows (invalid email): ${skippedRows}`);\r\n            console.log(`Filtered out rows: ${filteredOutRows}`);\r\n            console.log(`Valid emails found: ${emails.length}`);\r\n\r\n            if (emails.length === 0) {\r\n                throw new Error(\"No valid emails to send. Please check your data and filter criteria.\");\r\n            }\r\n\r\n            console.log(\"Prepared emails:\", JSON.stringify(emails, null, 2));\r\n  \r\n            console.log(`Preparing to send ${emails.length} emails`);\r\n            const response = await fetch(\"http://localhost:3001/api/send-emails\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ emails }),\r\n            });\r\n\r\n            const responseData = await response.json();\r\n            console.log(\"Server response:\", JSON.stringify(responseData, null, 2));\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\r\n                    `HTTP error! status: ${response.status}, message: ${responseData.error}, details: ${JSON.stringify(responseData, null, 2)}`\r\n                );\r\n            }\r\n\r\n            if (responseData.sentEmails && Array.isArray(responseData.sentEmails)) {\r\n                console.log(`Successfully sent ${responseData.sentEmails.length} out of ${emails.length} emails`);\r\n                responseData.sentEmails.forEach((email: string) => {\r\n                    console.log(`Email sent to: ${email}`);\r\n                });\r\n            }\r\n\r\n            if (responseData.failedEmails && Array.isArray(responseData.failedEmails)) {\r\n                console.log(`Failed to send ${responseData.failedEmails.length} emails`);\r\n                responseData.failedEmails.forEach((failedEmail: { email: string, error: string }) => {\r\n                    console.log(`Failed to send email to ${failedEmail.email}. Error: ${failedEmail.error}`);\r\n                });\r\n            }\r\n\r\n            showNotification(`Emails sent: ${responseData.sentEmails.length}/${emails.length}. Check console for details.`);\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error sending emails:\", error);\r\n        showNotification(`Error sending emails: ${error.message}`, true);\r\n    }\r\n}\r\n\r\nfunction formatEmailContent(content: string): string {\r\n  // Replace single newlines with <br> tags\r\n  content = content.replace(/(?<!\\n)\\n(?!\\n)/g, \"<br>\");\r\n\r\n  // Replace double newlines with paragraph breaks\r\n  content = content.replace(/\\n\\n/g, \"</p><p>\");\r\n\r\n  // Wrap the entire content in a paragraph tag\r\n  content = `<p>${content}</p>`;\r\n\r\n  return content;\r\n}\r\n\r\nfunction isValidEmail(email: string) {\r\n  const re =\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\n\r\nfunction showNotification(message: string, isError: boolean = false) {\r\n  const notificationElement = document.createElement(\"div\");\r\n  notificationElement.textContent = message;\r\n  notificationElement.style.position = \"fixed\";\r\n  notificationElement.style.top = \"10px\";\r\n  notificationElement.style.left = \"50%\";\r\n  notificationElement.style.transform = \"translateX(-50%)\";\r\n  notificationElement.style.padding = \"10px\";\r\n  notificationElement.style.borderRadius = \"5px\";\r\n  notificationElement.style.backgroundColor = isError ? \"#ffcccc\" : \"#ccffcc\";\r\n  notificationElement.style.border = `1px solid ${isError ? \"#ff0000\" : \"#00ff00\"}`;\r\n  document.body.appendChild(notificationElement);\r\n\r\n  setTimeout(() => {\r\n    document.body.removeChild(notificationElement);\r\n  }, 3000);\r\n}\r\n\r\nfunction applyFilters(row: any[], headerRow: string[]): boolean {\r\n    if (filters.length === 0) return true;\r\n\r\n    console.log(\"Applying filters:\", JSON.stringify(filters));\r\n    \r\n    return filters.every(filter => {\r\n        const columnIndex = headerRow.findIndex(col => col.toLowerCase() === filter.column.toLowerCase());\r\n        if (columnIndex === -1) {\r\n            console.log(`Column not found: ${filter.column}`);\r\n            return false;\r\n        }\r\n\r\n        const cellValue = row[columnIndex]?.toString().toLowerCase() ?? \"\";\r\n        const filterValues = filter.values.toLowerCase().split(',').map(v => v.trim());\r\n\r\n        console.log(`Checking column: ${filter.column}, Cell value: ${cellValue}, Filter values: ${filterValues.join(', ')}`);\r\n\r\n        const result = filterValues.some(value => cellValue.includes(value));\r\n        console.log(`Filter result for ${filter.column}: ${result}`);\r\n        return result;\r\n    });\r\n}\r\n\r\nfunction detectEmailColumn(headerRow: string[]): number {\r\n    const emailRegex = /email|e-mail|mail/i;\r\n    return headerRow.findIndex(header => emailRegex.test(header));\r\n}\r\n\r\nasync function handleWorksheetChange(event: Office.EventType) {\r\n    try {\r\n      console.log(\"Worksheet changed. Updating column titles and email menu.\");\r\n      await getColumnTitles();\r\n      populateColumnTitlesMenu();\r\n      // populateEmailColumnMenu() is now called within getColumnTitles()\r\n    } catch (error) {\r\n      console.error(\"Error handling worksheet change:\", error);\r\n      showNotification(\"Failed to update columns. Please try again.\", true);\r\n    }\r\n}"],"names":["Logging","log","args","console","error","rgs","filters","columnTitles","Office","onReady","info","document","getElementById","style","display","host","HostType","Excel","run","context","sheet","workbook","worksheets","getActiveWorksheet","onChanged","add","handleWorksheetChange","onActivated","sync","getColumnTitles","populateColumnTitlesMenu","catch","showNotification","addEventListener","generateEmailDraft","sendEmails","handleOptionsChange","addFilter","handlePromptInput","Outlook","range","getUsedRange","headerRow","getRow","load","values","length","Error","populateEmailColumnMenu","menus","getElementsByClassName","Array","from","forEach","menu","innerHTML","defaultOption","createElement","text","value","appendChild","title","index","option","toString","emailColumnMenu","emailColumnIndex","detectEmailColumn","event","textarea","target","cursorPosition","selectionStart","textBeforeCursor","substring","endsWith","showColumnTitlesMenu","position","existingDropdown","querySelector","remove","dropdown","className","zIndex","backgroundColor","border","maxHeight","overflowY","boxShadow","rect","getBoundingClientRect","top","left","getCaretCoordinates","dropdownTop","offsetHeight","dropdownLeft","item","textContent","padding","cursor","onmouseover","onmouseout","onclick","insertColumnTitle","body","dropdownRect","closeDropdown","e","contains","removeEventListener","element","div","styles","getComputedStyle","properties","prop","visibility","whiteSpace","coordinates","scrollTop","offsetWidth","scrollLeft","removeChild","before","after","selectionEnd","focus","select","addFilterButton","updateFilterDisplay","JSON","stringify","filter","column","filterContainer","columnSelect","createColumnSelect","valuesInput","createValuesInput","deleteButton","createDeleteButton","push","populateColumnSelect","parseInt","type","placeholder","findIndex","f","splice","filterContainers","promptElement","subjectElement","bodyElement","prompt","generatedText","callClaudeAPI","subject","parseGeneratedEmail","message","parts","split","replace","trim","slice","join","apiUrl","response","fetch","method","headers","max_tokens_to_sample","temperature","data","json","ok","status","completion","emailColumnSelect","isNaN","usedRange","emailSubjectTemplate","emailBodyTemplate","emails","skippedRows","totalRows","filteredOutRows","optionsSelect","useFilters","i","row","emailAddress","isValidEmail","passesFilter","applyFilters","personalizedSubject","personalizedBody","j","columnName","cellValue","RegExp","formatEmailContent","to","html","responseData","sentEmails","isArray","email","failedEmails","failedEmail","content","re","test","String","toLowerCase","isError","notificationElement","transform","borderRadius","setTimeout","every","columnIndex","col","filterValues","map","v","result","some","includes","emailRegex","header"],"sourceRoot":""}