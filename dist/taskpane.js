!function(){let e,t=[],n=[],o=!1,l=100;const s="university",i="professor",a="students",c="professional";let r=s,d=i,u=a,m=c,g=300,f=.7;async function p(){try{await Excel.run((async e=>{console.log("Fetching column titles...");const t=e.workbook.worksheets.getActiveWorksheet().getUsedRange().getRow(0);if(t.load("values"),await e.sync(),!t.values||0===t.values.length||0===t.values[0].length)throw new Error("No data found in the first row of the sheet");n=t.values[0],console.log("Column titles updated:",n),function(){const e=document.getElementById("email-column");if(!e)return void console.error("Email column menu not found");e.innerHTML="";const t=document.createElement("option");t.text="Select a column",t.value="",e.appendChild(t),n.forEach(((t,n)=>{const o=document.createElement("option");o.value=n.toString(),o.text=t,e.appendChild(o)}));const o=function(e){const t=/email|e-mail|mail/i;return e.findIndex((e=>t.test(e)))}(n);-1!==o&&(e.value=o.toString()),console.log("Email column menu populated with",n.length,"options"),console.log("Automatically selected email column:",o)}()}))}catch(e){throw console.error("Error fetching column titles:",e),e}}function y(){const e=document.getElementsByClassName("columnTitlesMenu");Array.from(e).forEach((e=>{e.innerHTML="";const t=document.createElement("option");t.text="Select a column",t.value="",e.appendChild(t),n.forEach(((t,n)=>{const o=document.createElement("option");o.value=n.toString(),o.text=t,e.appendChild(o)}))}))}function h(e){const n=e.target;document.getElementById("add-filter").style.display="specific"===n.value?"inline-block":"none","specific"!==n.value&&(t=[],document.getElementById("filter-containers").innerHTML="",console.log("Filters cleared:",JSON.stringify(t)))}function E(){const e={column:"",values:""},o=document.createElement("div");o.className="filter-container";const l=function(e){const t=document.createElement("select");return t.className="columnTitlesMenu",t.addEventListener("change",(function(){e.column=n[parseInt(this.value)]})),t}(e),s=function(e){const t=document.createElement("input");return t.type="text",t.placeholder="Enter values (comma-separated)",t.addEventListener("input",(function(){e.values=this.value})),t}(e),i=function(e,n){const o=document.createElement("button");return o.textContent="Delete",o.addEventListener("click",(function(){n.remove();const o=t.findIndex((t=>t===e));-1!==o&&t.splice(o,1)})),o}(e,o);o.appendChild(l),o.appendChild(s),o.appendChild(i),document.getElementById("filter-containers").appendChild(o),t.push(e),console.log("Current filters:",JSON.stringify(t)),function(e){e.innerHTML="";const t=document.createElement("option");t.text="Select a column",t.value="",e.appendChild(t),n.forEach(((t,n)=>{const o=document.createElement("option");o.value=n.toString(),o.text=t,e.appendChild(o)}))}(l)}async function v(){const e=document.getElementById("myTextarea"),t=document.getElementById("email-subject"),o=document.getElementById("email-body"),l=e.value;if(l)try{console.log("Generating email draft..."),b("Generating email draft...");const e=await async function(e,t){const n=document.getElementById("anthropic-api").value,o="professor",l="professional";if(!n)throw new Error("Anthropic API key is not set. Please enter it in the Sign In section.");try{console.log("Calling Claude API..."),console.log("Prompt:",e),console.log("Column titles:",t);const s=await fetch("http://localhost:3001/api/generate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({prompt:`Human: \n                 Forget any previous instructions.\n                 You are an AI assistant helping a ${o} at a university write an ${l} email to to students. \n                 The ${o} will provide instructions, and you should write a ${l} email based on those instructions. \n                 Generate both a subject line and an email body. \n                 Use {{column_title}} as placeholders for personalised information.\n                 Only use curly brackets {} This is the only type of brackets you are allowed to use.\n                 Available column titles are: ${t.join(", ")}. \n                 Only stick to the available column titles in the provided menu. \n                 Do not repeat the column titles multiple times if you are creating a list within the generated email body. \n                 This is very important: only provide the email draft ready to be sent instead of writing something along the lines of "Here is an email..." at the beginning. \n                 Do not use a signature for the ${o}. \n                 Stop generating the email body after you write "kind regards" or "sincerely" or the other similar words that are used to end emails. \n                 Provide the email draft in the following format:\n\n                Subject: [Generated Subject]\n\n                [Generated Email Body]\n\n                Here are the teacher's instructions: "${e}"\n\n                Assistant:`,max_tokens_to_sample:g,temperature:f,ANTHROPIC_API_KEY:n})}),i=await s.json();if(console.log("API response:",JSON.stringify(i,null,2)),!s.ok)throw new Error(`HTTP error! status: ${s.status}, message: ${JSON.stringify(i,null,2)}`);if(!i.completion)throw new Error("No completion in API response: "+JSON.stringify(i,null,2));return i.completion}catch(e){throw console.error("Error calling Claude API:",e),e}}(l,n),{subject:s,body:i}=function(e){const t=e.split("\n\n");return{subject:t[0].replace("Subject: ","").trim(),body:t.slice(1).join("\n\n").trim()}}(e);t.value=s,o.value=i;const a=document.getElementById("email-signature").value;o.value=i+"\n\n"+a+"\n\n\n\nThis email was sent using the Excel add-in, 'teacherhelper'. Please do NOT reply to no-reply.teacherhelper@outlook.com",b("Email draft generated successfully!")}catch(e){console.error("Error in generateEmailDraft:",e),t.value="Error generating subject",o.value="An error occurred. Please try again. Error details: "+e.message,b("Failed to generate email draft. Please try again.",!0)}else b("Please enter a prompt before generating an email draft.",!0)}async function I(){console.log("Sending emails...");const e=document.getElementById("sendgrid-api").value,n=document.getElementById("sendgrid-email").value;if(e&&n)try{await Excel.run((async o=>{const s=o.workbook.worksheets.getActiveWorksheet(),i=document.getElementById("email-column"),a=parseInt(i.value);if(console.log(`Selected email column index: ${a}`),isNaN(a))throw new Error("Please select an email column");const c=s.getUsedRange();c.load("values"),await o.sync();const r=c.values[0];console.log(`Header row: ${JSON.stringify(r)}`);const d=document.getElementById("email-subject"),u=document.getElementById("email-body"),m=document.getElementById("sender-email").value.trim();if(document.getElementById("email-signature"),!d||!u)throw new Error("Email subject or body element not found");const g=d.value,f=u.value;if(console.log(`Email subject template: ${g}`),console.log(`Email body template: ${f}`),!g||!f)throw new Error("Email subject or body template is empty");const p=[];let y=0,h=c.values.length-1,E=0;console.log(`Processing ${h} rows...`);const v="specific"===document.getElementById("options").value;console.log(`Using filters: ${v}`),console.log(`Current filters: ${JSON.stringify(t)}`);for(let e=1;e<c.values.length;e++){const t=c.values[e];console.log(`Processing row ${e}: ${JSON.stringify(t)}`);const n=t[a];if(console.log(`Email address found: ${n}`),!n||!x(n)){console.log(`Skipping row ${e}: Invalid email address`),y++;continue}if(v){const n=B(t,r);if(console.log(`Row ${e} passes filter: ${n}`),!n){E++;continue}}const o=p.length+(m?1:0);if(o>l)return void T(`Warning: The number of emails to be sent (${o}) exceeds your remaining email sending credit (${l}). Please reduce the number of recipients or try again tomorrow.`);m&&x(m)&&p.push({to:m,subject:d.value,html:w(u.value)});let s=g,i=f;for(let e=0;e<t.length;e++){const n=r[e],o=t[e],l=`{{${n}}}`;s=s.replace(new RegExp(l,"g"),o),i=i.replace(new RegExp(l,"g"),o)}i=w(i),p.push({to:n,subject:s,html:i}),console.log(`Added email for ${n} with subject: ${s}`)}if(console.log(`Total rows processed: ${h}`),console.log(`Skipped rows (invalid email): ${y}`),console.log(`Filtered out rows: ${E}`),console.log(`Valid emails found: ${p.length}`),0===p.length)throw new Error("No valid emails to send. Please check your data and filter criteria.");console.log("Prepared emails:",JSON.stringify(p,null,2)),console.log(`Preparing to send ${p.length} emails`);const I=await fetch("http://localhost:3001/api/send-emails",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({emails:p,SENDGRID_API_KEY:e,sendgridEmail:n})}),S=await I.json();if(console.log("Server response:",JSON.stringify(S,null,2)),!I.ok)throw new Error(`HTTP error! status: ${I.status}, message: ${S.error}, details: ${JSON.stringify(S,null,2)}`);S.sentEmails&&Array.isArray(S.sentEmails)&&(console.log(`Successfully sent ${S.sentEmails.length} out of ${p.length} emails`),S.sentEmails.forEach((e=>{console.log(`Email sent to: ${e}`),l>0&&(l--,A(),P())}))),S.failedEmails&&Array.isArray(S.failedEmails)&&(console.log(`Failed to send ${S.failedEmails.length} emails`),S.failedEmails.forEach((e=>{console.log(`Failed to send email to ${e.email}. Error: ${e.error}`)}))),b(`Emails sent: ${S.sentEmails.length}/${p.length}. Check console for details.`)}))}catch(e){console.error("Error sending emails:",e),b(`Error sending emails: ${e.message}`,!0)}else b("SendGrid API key and email are required. Please enter them in the Sign In section.",!0)}function w(e){return`<p>${e=(e=e.replace(/(?<!\n)\n(?!\n)/g,"<br>")).replace(/\n\n/g,"</p><p>")}</p>`}function x(e){return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(e).toLowerCase())}function b(e,t=!1){const n=document.createElement("div");n.textContent=e,n.style.position="fixed",n.style.top="10px",n.style.left="50%",n.style.transform="translateX(-50%)",n.style.padding="10px",n.style.borderRadius="5px",n.style.backgroundColor=t?"#ffcccc":"#ccffcc",n.style.border="1px solid "+(t?"#ff0000":"#00ff00"),document.body.appendChild(n),setTimeout((()=>{document.body.removeChild(n)}),3e3)}function B(e,n){return 0===t.length||(console.log("Applying filters:",JSON.stringify(t)),t.every((t=>{const o=n.findIndex((e=>e.toLowerCase()===t.column.toLowerCase()));if(-1===o)return console.log(`Column not found: ${t.column}`),!1;const l=e[o]?.toString().toLowerCase()??"",s=t.values.toLowerCase().split(",").map((e=>e.trim()));console.log(`Checking column: ${t.column}, Cell value: ${l}, Filter values: ${s.join(", ")}`);const i=s.some((e=>l.includes(e)));return console.log(`Filter result for ${t.column}: ${i}`),i})))}async function S(e){try{console.log("Worksheet changed. Updating column titles and email menu."),await p(),y()}catch(e){console.error("Error handling worksheet change:",e),b("Failed to update columns. Please try again.",!0)}}function k(){const e=document.getElementById("email-signature").value;Office.context.document.settings.set("teacherSignature",e),Office.context.document.settings.saveAsync((()=>{console.log("Signature saved successfully"),b("Signature saved successfully!")}))}function C(){r=s,d=i,u=a,m=c,g=300,f=.7,O(),b("Settings reset to original values.")}function $(){Office.context.document.settings.set("teacherhelper_institution",r),Office.context.document.settings.set("teacherhelper_persona",d),Office.context.document.settings.set("teacherhelper_audience",u),Office.context.document.settings.set("teacherhelper_tone",m),Office.context.document.settings.set("teacherhelper_maxTokens",g),Office.context.document.settings.set("teacherhelper_temperature",f),Office.context.document.settings.saveAsync((()=>{console.log("Control settings saved successfully"),b("Control settings saved successfully!")}))}function O(){document.getElementById("institution").value=r,document.getElementById("persona").value=d,document.getElementById("audience").value=u,document.getElementById("tone").value=m,document.getElementById("max-tokens").value=g.toString(),document.getElementById("temperature").value=f.toString(),document.getElementById("max-tokens-value").textContent=g.toString(),document.getElementById("temperature-value").textContent=f.toString()}function A(){const e=document.getElementById("email-counter");e&&(e.textContent=`Emails remaining today: ${l}`)}function P(){localStorage.setItem("emailCounter",l.toString()),localStorage.setItem("lastResetDate",e)}function T(e){const t=document.createElement("div");t.style.cssText="\n    position: fixed;\n    z-index: 1000;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0,0,0,0.4);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  ";const n=document.createElement("div");n.style.cssText="\n    background-color: #fefefe;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 80%;\n    max-width: 400px;\n    text-align: center;\n  ";const o=document.createElement("button");o.textContent="Close",o.onclick=()=>document.body.removeChild(t),n.innerHTML=`<p>${e}</p>`,n.appendChild(o),t.appendChild(n),document.body.appendChild(t)}function L(){const e=document.getElementById("sender-email").value.trim();""===e||x(e)?(Office.context.document.settings.set("senderEmail",e),Office.context.document.settings.saveAsync((()=>{console.log("Sender email saved successfully"),b(""===e?"Your email has been cleared successfully!":"Your email has been saved successfully!")}))):b("Please enter a valid email address or leave it empty to clear.",!0)}Office.onReady((t=>{console.log("Office.onReady called"),document.getElementById("loading").style.display="none",t.host===Office.HostType.Excel?(console.log("Excel host detected"),document.getElementById("app-body").style.display="flex",function(){const e=document.getElementById("toggle-instructions"),t=document.getElementById("instructions");e&&t&&(e.onclick=function(){o=!o,t.style.display=o?"block":"none",e.textContent=o?"Hide Instructions":"Show instructions on how to use teacherhelper"})}(),function(){console.log("Initializing advanced settings");const e=document.getElementById("advanced-settings-btn"),t=document.getElementById("advanced-settings"),n=document.getElementById("advanced-settings-reset"),o=document.getElementById("advanced-settings-save");e&&t&&n&&o?(e.addEventListener("click",(()=>{t.style.display="none"===t.style.display?"block":"none"})),n.addEventListener("click",C),o.addEventListener("click",$),r=Office.context.document.settings.get("teacherhelper_institution")||s,d=Office.context.document.settings.get("teacherhelper_persona")||i,u=Office.context.document.settings.get("teacherhelper_audience")||a,m=Office.context.document.settings.get("teacherhelper_tone")||c,g=Office.context.document.settings.get("teacherhelper_maxTokens")||300,f=Office.context.document.settings.get("teacherhelper_temperature")||.7,O(),document.getElementById("institution")?.addEventListener("input",(e=>{r=e.target.value||s})),document.getElementById("persona")?.addEventListener("input",(e=>{d=e.target.value||i})),document.getElementById("audience")?.addEventListener("input",(e=>{u=e.target.value||a})),document.getElementById("tone")?.addEventListener("input",(e=>{m=e.target.value||c})),document.getElementById("max-tokens")?.addEventListener("input",(e=>{g=parseInt(e.target.value),document.getElementById("max-tokens-value").textContent=g.toString()})),document.getElementById("temperature")?.addEventListener("input",(e=>{f=parseFloat(e.target.value),document.getElementById("temperature-value").textContent=f.toString()}))):console.error("One or more advanced settings elements not found")}(),function(){const t=localStorage.getItem("emailCounter"),n=localStorage.getItem("lastResetDate");null!==t&&(l=parseInt(t,10)),e=null!==n?n:(new Date).toDateString(),function(){const t=(new Date).toDateString();e!==t&&(l=100,e=t,P()),A()}()}(),function(){const e=document.getElementById("toggle-signin"),t=document.getElementById("signin-options");e&&t&&(e.onclick=function(){N=!N,t.style.display=N?"block":"none"})}(),function(){const e=Office.context.document.settings.get("ANTHROPIC_API_KEY"),t=Office.context.document.settings.get("sendgridEmail"),n=Office.context.document.settings.get("SENDGRID_API_KEY");e&&(document.getElementById("anthropic-api").value=e),t&&(document.getElementById("sendgrid-email").value=t),n&&(document.getElementById("sendgrid-api").value=n)}(),Excel.run((async e=>{e.workbook.worksheets.getActiveWorksheet().onChanged.add(S),e.workbook.worksheets.onActivated.add(S),await e.sync(),console.log("Event handlers added for worksheet changes"),await p(),y()})).catch((e=>{console.error("Error setting up event handlers:",e),b("Failed to set up automatic updates. Please refresh manually if needed.",!0)})),function(){const e=Office.context.document.settings.get("teacherSignature");e&&(document.getElementById("email-signature").value=e)}(),function(){const e=Office.context.document.settings.get("senderEmail");e&&(document.getElementById("sender-email").value=e)}(),document.getElementById("generate-draft").addEventListener("click",v),document.getElementById("send-emails").addEventListener("click",I),document.getElementById("options").addEventListener("change",h),document.getElementById("add-filter").addEventListener("click",E),document.getElementById("save-signature").addEventListener("click",k),document.getElementById("save-sender-email").addEventListener("click",L),document.getElementById("save-signin-options").addEventListener("click",_)):console.log("Unsupported host detected:",t.host)}));let N=!1;function _(){const e=document.getElementById("anthropic-api").value,t=document.getElementById("sendgrid-email").value,n=document.getElementById("sendgrid-api").value;Office.context.document.settings.set("ANTHROPIC_API_KEY",e),Office.context.document.settings.set("sendgridEmail",t),Office.context.document.settings.set("SENDGRID_API_KEY",n),Office.context.document.settings.saveAsync((()=>{console.log("Sign-in options saved successfully"),b("Sign-in options saved successfully!")}))}}();
//# sourceMappingURL=taskpane.js.map